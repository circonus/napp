#!/bin/bash
PID=$1
REASON=$2

if [[ -r /opt/noit/prod/etc/noit.env ]]; then
    . /opt/noit/prod/etc/noit.env
fi
if [[ -r /opt/noit/prod/etc/noit.local.env ]]; then
    . /opt/noit/prod/etc/noit.local.env
fi

if [[ -n $DISABLE_CRASH_REPORTS || ! -x /opt/backtrace/bin/ptrace ]]; then
    echo "Process $PID has crashed."
    echo "Noit version: $NOIT_VERSION"
    echo "No tracer installed or crash reporting disabled."
    exit
fi

echo "Invoking tracer against $PID."

if [[ -r /opt/napp/etc/ssl/appliance.crt ]]; then
    CERT=/opt/napp/etc/ssl/appliance.crt
elif [[ -r /opt/noit/prod/etc/ssl/appliance.crt ]] ; then
    CERT=/opt/noit/prod/etc/ssl/appliance.crt
fi

if [[ "x$CERT" != "x" ]]; then
    HOSTCN=`openssl x509 -in $CERT -subject | gawk -F'= ' '/^subject= (.+)/{print $2;}' | sed -e 's/.*CN=//g;' -e 's#/.*##g;'`
fi

# The following parameters are needed by the mtev-http-observer ptrace-module
MOD_HTTP_OBSERVER_FLAGS="--load=/opt/circonus/libexec/mtev/http_observer.so --global lookup"

/opt/backtrace/bin/ptrace --print --config=/opt/noit/prod/etc/ptrace.conf \
    --modules-path=/opt/circonus/share/ptrace \
    --kv=hostcn:$HOSTCN,location:$LOCATION,provider:$PROVIDER,environment:$ENVIRONMENT,trace_reason:$REASON \
    --kv=branch:$NOIT_BRANCH,version:$NOIT_VERSION,version_tstamp:$NOIT_VERSION_TSTAMP,buildmachine:$BUILD_NOIT_UNAME_N \
    --kv=mtev_version:$MTEV_VERSION \
    $MOD_HTTP_OBSERVER_FLAGS \
    $PID

# Upload any ASAN logs, then remove them
ASAN_URL='https://morgue.backtrace.io/circonus/b0474f5b8cdf9ecd81f94e5a921ddaa24296f5a76e49540f20c7faad93bc1631/sanitizers'
QS="?application=broker&hostcn=$HOSTCN&location=$LOCATION&provider=$PROVIDER&environment=$ENVIRONMENT&branch=$NOIT_BRANCH&version=$NOIT_VERSION&version_tstamp=$NOIT_VERSION_TSTAMP&mtev_version=$MTEV_VERSION"

tracedir="/opt/noit/prod/traces"
asan_logs=(/opt/noit/prod/log/asan.log.*)
if [[ -f "$asan_logs" ]]; then
    echo "Found ${#asan_logs[@]} ASAN logs to upload"

    for log in "${asan_logs[@]}"
    do
        fn=$(basename $log)

        HTTP_CODE=$(curl -s -o ${tracedir}/upload_${fn}.trc --write-out "%{http_code}" --data-binary @$log "${ASAN_URL}${QS}")

        # remove if upload was successful
        if [[ ${HTTP_CODE} -ge 200 || ${HTTP_CODE} -lt 299 ]] ; then
            rm -f $log
        fi
    done
fi

# Clean up unsent traces older than 7 days and trace output older than 14
find $tracedir -type f -name '*.btt' -mtime +7 | xargs rm -f
find $tracedir -type f -name '*.trc' -mtime +14 | xargs rm -f
