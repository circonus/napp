#!/bin/sh

###
# In docker we want so support /opt/noit/prod/etc as a volume
# However, this means when we roll new docker images and people upgrade
# they will not get the updated package config files.  While no one has
# ever said anything nice about apt/dpkg, at least it knows which config
# files are user-editable...  So, for the docker image we drop a copy of
# the circonus-field-broker-core package we installed into
#   /opt/napp/package/circonus-field-broker-core-stock.deb
#
# This might not be the same one that was installed when these volumes
# were created, so we just go ahead and force-install it again and it will
# replace configs that we have configured that way.
# It's a quick (subsecond) install.
###
if [ -r /opt/napp/package/circonus-field-broker-core-stock.deb ]; then
  INSTALLED=`dpkg -l circonus-field-broker-core | awk '/broker-core/{print $2"-"$3}'`
  REMEMBERED=`cat /opt/noit/prod/etc/docker-core-version 2>/dev/null`
  if [ "$INSTALLED" != "$REMEMBERED" ]; then
    echo "Updating config files..."
    /usr/bin/apt-get install --reinstall /opt/napp/package/circonus-field-broker-core-stock.deb
    /usr/bin/dpkg -l circonus-field-broker-core | \
      awk '/broker-core/{print $2"-"$3}' > /opt/noit/prod/etc/docker-core-version
  fi
fi

NOITD=/opt/noit/prod/sbin/noitd
CONF=/opt/noit/prod/etc/noit.conf
USER=broker
GROUP=broker
WRITE_PATHS=" \
	/opt/noit/prod/log \
	/opt/noit/prod/etc \
"

# Potentially move old SSL from /opt/napp/etc/ssl to /opt/noit/prod/etc/ssl
if [ -d /opt/napp/etc/ssl ]; then
	echo "Relocating SSL credentials"
	(cd /opt/napp/etc && find ssl -print | cpio -pvd /opt/noit/prod/etc && rm -rf /opt/napp/etc)
fi

if [ -x /usr/gnu/bin/awk ]; then
	AWK="/usr/gnu/bin/awk"
else
	AWK="awk"
fi

set -o allexport
if [ -r /opt/noit/prod/etc/noit.env ]; then
	. /opt/noit/prod/etc/noit.env
fi
if [ -r /opt/noit/prod/etc/noit.local.env ]; then
	. /opt/noit/prod/etc/noit.local.env
fi

# Detect if we have no process management and if coroner management
# has not been explicitly set.  If this is the case, we should run
# with coroner managed.
if [ -z "$MANAGED_CORONER" ]; then
	if [ "$$" -eq "1" -a -x "/opt/backtrace/bin/coroner" ]; then
		MANAGED_CORONER=1
	fi
fi

set +o allexport

# Just in case, chown this stuff
for dir in $WRITE_PATHS; do
	/bin/chown -R $USER:$GROUP $dir 2>/dev/null
done

test ! \( -f /opt/noit/prod/etc/ssl/graphite.key -a -f /opt/noit/prod/etc/ssl/graphite.crt -a -f /opt/noit/prod/etc/ssl/graphite-ca.crt \)
export SNI_GRAPHITE=$?

exec $NOITD -c $CONF -u $USER -g $GROUP $*
exit 2
