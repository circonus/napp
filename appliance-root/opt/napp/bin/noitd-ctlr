#!/usr/bin/env python
#
# chkconfig: 345 25 75
# description: A daemon that starts and stops noitd by file presense


import sys, os, fcntl, time, struct, platform

def start_noit():
    if platform.system() == 'SunOS':
        os.system("/usr/sbin/svcadm clear noitd")
        os.system("/usr/sbin/svcadm enable -s noitd")
    else:
        os.system("/etc/rc.d/init.d/noitd start")

def stop_noit():
    if platform.system() == 'SunOS':
        os.system("/usr/sbin/svcadm clear noitd")
        os.system("/usr/sbin/svcadm disable -s noitd")
    else:
        os.system("/etc/rc.d/init.d/noitd stop")

def set_initial_state():
    if not os.system("pgrep '^noitd$'"):
        f = open('/opt/napp/etc/noit.run', 'w')
        f.close()
        return True
    else:
        return False


def main(cmd):

    if cmd == 'start':
        print('Starting...')
    elif cmd == 'stop':
        if not os.path.isfile('/var/run/noitd-ctrl.lock'):
            print('not running...')
            os._exit(-1)
        try:
            lock = open('/var/run/noitd-ctrl.lock', 'r')
            pid = lock.read()
            lock.close()
            try:
                os.kill(int(pid), 3)
            except OSError:
                print("No such process")
            try:
                os.unlink('/var/run/noitd-ctrl.lock')
            except IOError:
                print("No such file")
            os._exit(0)
        except IOError:
            os._exit(-1)
    else:
        print('%s not understood' % (cmd))
        os._exit(-1)

    pid = os.fork()
    if (pid != 0):
        os._exit(0)
    os.setsid()
    id = os.fork()
    if (pid != 0):
        os._exit(0)

    lock = os.open('/var/run/noitd-ctrl.lock', os.O_RDWR | os.O_CREAT)
    if fcntl.F_SETLK == fcntl.F_SETLK64:
        lockdata = struct.pack('hhqqlll', fcntl.F_WRLCK, 0, 0, 0, 0, 0, 0)
    else:
        lockdata = struct.pack('hhllhh', fcntl.F_WRLCK, 0, 0, 0, 0, 0)
    try:
        rv = fcntl.fcntl(lock, fcntl.F_SETLK, lockdata)
    except IOError:
        print("Already running...")
        os._exit(-1)
    os.write(lock, "%d" % (os.getpid()))

    noit_on = set_initial_state()

    while True:
        if os.path.isfile('/opt/napp/etc/noit.run'):
            if not noit_on:
                print("starting noitd")
                start_noit()
                noit_on = True
        else:
            if noit_on:
                print("stopping noitd")
                stop_noit()
                noit_on = False
        time.sleep(2)

if __name__ == "__main__":
    main((lambda x:sys.argv[1], lambda x:'command')[len(sys.argv) != 2](0))
